<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fieldGenerated=false;

blockSize=32;

fieldWidth=ceil(room_width/blockSize); //# of columns
fieldHeight=ceil(room_height/blockSize); //# of rows

//We initialize our field as every block is walkable
for(var i=0;i&lt;fieldWidth;i++){
    for(var j=0;j&lt;fieldHeight;j++){
        walkable[i,j]=true;
        pathingSpeedArray[i,j]=1; //initialize slowing field as no impedence
    }
}

SlowedPathingSpeed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if we haven't scouted for solids
if(!fieldGenerated){
        //Execute in every single solid we have
       with(oSolid){
            var blockX=x div oAStar.blockSize; //recording the coords of each block
            var blockY=y div oAStar.blockSize; //integeger division more efficient than floor()
            oAStar.walkable[blockX,blockY]=false; //if we find a block, make its index unwalkable
            //Need oAStar.__ for variables bc we are calling from oSolid bc of with(), and oSolid has no code whatsoever
       } 
       with(oFrictionBlock){
            var blockX=x div oAStar.blockSize; //recording the coords of each block
            var blockY=y div oAStar.blockSize; //integeger division more efficient than floor()
            oAStar.pathingSpeedArray[blockX,blockY]=oAStar.SlowedPathingSpeed; //if we find a block, make its index slowed
       }   
    //Make sure generation is not called again
    fieldGenerated=true;
}

//scout for light continuously
with(oLightTerror){
            var blockX=x div oAStar.blockSize; 
            var blockY=y div oAStar.blockSize; 
            oAStar.walkable[blockX,blockY]=false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_black);
//for(var i=0;i&lt;fieldWidth;i++){
//    for(var j=0;j&lt;fieldHeight;j++){   
        //1 pixel thick outline if walkable, filled in rectangle if not walkable
//        draw_rectangle(i*blockSize,j*blockSize,(i+1)*blockSize,(j+1)*blockSize,walkable[i,j]);
        //draw_text(i*blockSize,j*blockSize,string(i)+"#"+string(j));
        
//    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
